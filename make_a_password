#!/bin/bash
#Author: John Selmys
#Date: Sept 2014
#Organization: Seneca College
#Purpose: Password Checker and Generator
#Usage: pw | pw -h | pw -n count | pw password
#Note:	Valid passwords must be at least 8 characters long,
#	contain at least 1 digit,
#	contain at least 1 lowercase letter
#	contain at least 1 uppercase letter
#	contain one of @ #  $  %  &  *  +  -  =	
#
function Usage() {
	echo "Usage: pw | pw -h | pw password"
	echo "Note:	Valid passwords must be at least 8 characters long,"
	echo "contain at least 1 digit,"
	echo "contain at least 1 lowercase letter"
	echo "contain at least 1 uppercase letter"
	echo "contain one of @ #  $  %  &  *  +  -  =	"
	exit 0
}

function CheckOnePassword {
	pword=$1
	err=0
	if [ ${#pword} -lt 8 -o ${#pword} -gt 16 ]
	then
		err=1
		echo Error - Invalid Length - $pword
	fi
	di=$(echo $pword | grep '[0-9]')
	if [ "$di" = "" ]
	then
		err=1
		echo Error - Does not contain Digit - $pword
	fi
	lo=$(echo $pword | grep '[a-z]')
	if [ "$lo" = "" ]
	then
		err=1
		echo Error - Does not contain Lowercase Letter - $pword
	fi
	up=$(echo $pword | grep '[A-Z]')
	if [ "$up" = "" ]
	then
		err=1
		echo Error - Does not contain Uppercase Letter - $pword
	fi
	sp=$(echo $pword | grep '[@#$%&*+-=]')
	if [ "$sp" = "" ]
	then
		err=1
		echo Error - Does not contain One Special Character - $pword
	else
		count=$(echo $pword | grep -o '[@#$%&*+-=]' | wc -l)
		if [ $count -gt 1 ]
		then
			err=1
			echo Error - Contains More than One Special Character - $pword
		fi
	fi
	if [ $err -eq 1 ]
	then
		echo $pword is not a valid password
		exit 1
	else
		echo $pword is a valid password
	fi
	exit 0
}

function GenerateOnePassword() {
	#get random length of password 8 <= l <= 16
	l=$((8+RANDOM%9))
	#get one digit
	di=$(echo {0..9} | tr -d ' ' | cut -c$((RANDOM%10+1)))
	#get one lowercase letter
	lo=$(echo {a..z} | tr -d ' ' | cut -c$((RANDOM%26+1)))
	#get one uppercase letter
	up=$(echo {A..Z} | tr -d ' ' | cut -c$((RANDOM%26+1)))
	#get one special character
	sp=$(echo '@#$%&*+-=' | cut -c$((RANDOM%9+1)))
	#get the rest
	rest=${di}${lo}${up}${sp}
	r=$((l-4))
	for i in $(seq $r)
	do
		rest=${rest}$(echo {0..9} {a..z} {A..Z} | tr -d ' ' | cut -c$((RANDOM%62+1)))
	done
	password=
	n=$l
	for i in $(seq $l)
	do
		front=
		rear=
		x=$((RANDOM%n+1))
		password=${password}$(echo $rest | cut -c$x)
		if [ $x -gt 1 ]
		then
			front=$(echo $rest | cut -c1-$((x-1)))
		fi
		if [ $x -lt $n ]
		then
			rear=$(echo $rest | cut -c$((x+1))-)
		fi
		rest=${front}${rear}
		((n--))
	done
	echo Valid password is $password
	exit 0
}

if [ $# -eq 0 ]
then
	GenerateOnePassword
fi
if [ $# -eq 1 -a $1 = "-h" ]
then
	Usage
fi
if [ $# -eq 1 ]
then
	CheckOnePassword $1
fi
Usage
